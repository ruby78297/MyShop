{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { productsListReducer, productDetailsReducer } from \"./reducer/productReducers\";\nimport { cartReducer } from \"./reducer/cartReducer\";\nconst reducer = combineReducers({\n  productList: productsListReducer,\n  productDetails: productDetailsReducer,\n  cart: cartReducer\n});\n\n// const cartItemsFromStorage = localStorage.getItem(\"cartItems\")\n//   ? JSON.parse(localStorage.getItem(\"cartItems\"))\n//   : [];\n\n// const initialState = {\n//   cart: { cartItems: cartItemsFromStorage },\n// };\n\nlet cartItemsFromStorage = [];\ntry {\n  const storedCartItems = localStorage.getItem(\"cartItems\");\n  if (storedCartItems) {\n    cartItemsFromStorage = JSON.parse(storedCartItems);\n  }\n} catch (error) {\n  // Handle the error appropriately\n  console.error(\"Error parsing cartItems from localStorage:\", error);\n  // You can choose to set a default value or handle the error in a different way\n  // cartItemsFromStorage = []; // Set a default value\n}\n\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromStorage\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","productsListReducer","productDetailsReducer","cartReducer","reducer","productList","productDetails","cart","cartItemsFromStorage","storedCartItems","localStorage","getItem","JSON","parse","error","console","initialState","cartItems","middleware","store"],"sources":["C:/MyShop/frontend/src/store.js"],"sourcesContent":["import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport {\r\n  productsListReducer,\r\n  productDetailsReducer,\r\n} from \"./reducer/productReducers\";\r\nimport { cartReducer } from \"./reducer/cartReducer\";\r\n\r\nconst reducer = combineReducers({\r\n  productList: productsListReducer,\r\n  productDetails: productDetailsReducer,\r\n  cart: cartReducer,\r\n});\r\n\r\n// const cartItemsFromStorage = localStorage.getItem(\"cartItems\")\r\n//   ? JSON.parse(localStorage.getItem(\"cartItems\"))\r\n//   : [];\r\n\r\n// const initialState = {\r\n//   cart: { cartItems: cartItemsFromStorage },\r\n// };\r\n\r\nlet cartItemsFromStorage = [];\r\ntry {\r\n  const storedCartItems = localStorage.getItem(\"cartItems\");\r\n  if (storedCartItems) {\r\n    cartItemsFromStorage = JSON.parse(storedCartItems);\r\n  }\r\n} catch (error) {\r\n  // Handle the error appropriately\r\n  console.error(\"Error parsing cartItems from localStorage:\", error);\r\n  // You can choose to set a default value or handle the error in a different way\r\n  // cartItemsFromStorage = []; // Set a default value\r\n}\r\n\r\nconst initialState = {\r\n  cart: { cartItems: cartItemsFromStorage },\r\n};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,eAAe,EAAEC,eAAe,QAAQ,OAAO;AACrE,OAAOC,KAAK,MAAM,aAAa;AAC/B,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SACEC,mBAAmB,EACnBC,qBAAqB,QAChB,2BAA2B;AAClC,SAASC,WAAW,QAAQ,uBAAuB;AAEnD,MAAMC,OAAO,GAAGP,eAAe,CAAC;EAC9BQ,WAAW,EAAEJ,mBAAmB;EAChCK,cAAc,EAAEJ,qBAAqB;EACrCK,IAAI,EAAEJ;AACR,CAAC,CAAC;;AAEF;AACA;AACA;;AAEA;AACA;AACA;;AAEA,IAAIK,oBAAoB,GAAG,EAAE;AAC7B,IAAI;EACF,MAAMC,eAAe,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;EACzD,IAAIF,eAAe,EAAE;IACnBD,oBAAoB,GAAGI,IAAI,CAACC,KAAK,CAACJ,eAAe,CAAC;EACpD;AACF,CAAC,CAAC,OAAOK,KAAK,EAAE;EACd;EACAC,OAAO,CAACD,KAAK,CAAC,4CAA4C,EAAEA,KAAK,CAAC;EAClE;EACA;AACF;;AAEA,MAAME,YAAY,GAAG;EACnBT,IAAI,EAAE;IAAEU,SAAS,EAAET;EAAqB;AAC1C,CAAC;AAED,MAAMU,UAAU,GAAG,CAACnB,KAAK,CAAC;AAE1B,MAAMoB,KAAK,GAAGvB,WAAW,CACvBQ,OAAO,EACPY,YAAY,EACZhB,mBAAmB,CAACF,eAAe,CAAC,GAAGoB,UAAU,CAAC,CACpD,CAAC;AAED,eAAeC,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}